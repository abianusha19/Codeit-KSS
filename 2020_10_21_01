 Find minimum number of coins that make a given value
Given a value V, if we want to make change for V cents, and we have infinite supply of each of C = { C1, C2, .. , Cm} valued coins, what is the minimum number of coins to make the change?
Examples 1
Input: coins[] = {25, 10, 5}, V = 30
Output: Minimum 2 coins required
We can use one coin of 25 cents and one of 5 cents 
Examples 2
Input: coins[] = {9, 6, 5, 1}, V = 11
Output: Minimum 2 coins required
We can use one coin of 6 cents and 1 coin of 5 cents

--------------------------------------------------------------------------------------------------------------------------

Solution:

coins=list(map(int,input().split()))
v=int(input())
table=[9999999]*(v+1)
table[0]=0
for x in range(v+1):
    for y in range(len(coins)):
        if coins[y]<=x:
            res=table[x-coins[y]]
            if res!=9999999 and res+1<table[x]:
                table[x]=res+1
print(table[v])
