Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array.
Note:
The number of elements initialized in nums1 and nums2 are m and n respectively.
You may assume that nums1 has enough space (size that is equal to m + n) to hold additional elements from nums2.
Example:
Input:
nums1 = [1,2,3,0,0,0], m = 3
nums2 = [2,5,6],       n = 3
Output: [1,2,2,3,5,6]

Constraints:
-109 <= nums1[i], nums2[i] <= 109
nums1.length == m + n
nums2.length == n
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Solution:
--------

m=int(input())
n=int(input())
num1=[0]*(m+n)
num2=[0]*n
for x in range(m):
  num1[x]=int(input())
for y in range(n):
  num2[y]=int(input())
i=m-1
j=n-1
k=m+n-1
while(i>=0 and j>=0):
  if(num1[i]>=num2[j]):
    num1[k]=num1[i]
    i-=1
    k-=1
  elif(num1[i]<num2[j]):
    num1[k]=num2[j]
    j-=1
    k-=1
while(i>=0):
  num1[k]=num1[i]
  i-=1
  k-=1
while(j>=0):
  num1[k]=num2[j]
  j-=1
  k-=1
for x in range(m+n):
  print(num1[x],end=" ")


