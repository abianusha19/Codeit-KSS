Problem Statement
Write a function that takes in a two-dimensional array and returns a one-dimensional array of all the array's elements in zigzag order. Zigzag order starts at the top left corner of the two-dimensional array, goes down by one element, and proceeds in a zigzag pattern all the way to the bottom right corner.
Sample input: [ [1, 3, 4, 10], [2, 5, 9, 11], [6, 8, 12, 15], [7, 13, 14, 16], ] Sample output: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Solution:

#zigzag traversal
m,n=map(int,input().split())
matrix=[[] for x in range(m)]
for x in range(m):
  for y in range(n):
    i=int(input())
    matrix[x].append(i)
up=True
down=False
final=[]
final.append(matrix[0][0])
i=1
j=0
while True:
  final.append(matrix[i][j])
  if i==m-1 and j==n-1:
    break
  elif i==0 and j==n-1:
    if up:
      down=True
      up=False
      i+=1
    elif down:
      i+=1
      j-=1

  elif i==m-1 and j==0:
    if up:
      i-=1
      j+=1
    elif down:
      down=False
      up=True
      j+=1

  elif i==m-1:
    if up:
      i-=1
      j+=1
    elif down:
      down=False
      up=True
      j+=1
  
  elif j==n-1:
    if up:
      down=True
      up=False
      i+=1
    elif down:
      i+=1
      j-=1

  elif i==0:
    if up:
      up=False
      down=True
      j+=1
    elif down:
      i+=1
      j-=1

  elif j==0:
    if up:
      j+=1
      i-=1
    elif down:
      up=True
      down=False
      i+=1
  else:
    if up:
      i-=1
      j+=1
    elif down:
      i+=1
      j-=1
print(*final)

